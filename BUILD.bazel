load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@build_bazel_rules_apple//apple:apple.bzl", "apple_universal_binary")
load(
    "@build_bazel_rules_swift//swift:swift.bzl",
    "swift_binary",
    "swift_compiler_plugin",
    "swift_library",
    "universal_swift_compiler_plugin",
)
load("@build_bazel_rules_cc//cc:cc_library.bzl", "cc_library")
load("@build_bazel_rules_shell//shell:sh_test.bzl", "sh_test")

bool_flag(
    name = "universal_tools",
    build_setting_default = False,
)

config_setting(
    name = "universal_tools_config",
    flag_values = {
        "@SwiftLint//:universal_tools": "true",
    },
)

copts = [
    "-warnings-as-errors",
    "-enable-upcoming-feature",
    "ExistentialAny",
    "-enable-upcoming-feature",
    "ConciseMagicFile",
    "-enable-upcoming-feature",
    "ImportObjcForwardDeclarations",
    "-enable-upcoming-feature",
    "ForwardTrailingClosures",
    "-enable-upcoming-feature",
    "ImplicitOpenExistentials",
    "-Xfrontend",
    "-warn-implicit-overrides",
]

strict_concurrency_copts = [
    "-Xfrontend",
    "-strict-concurrency=complete",
]

targeted_concurrency_copts = [
    "-Xfrontend",
    "-strict-concurrency=targeted",
]

apple_universal_binary(
    name = "universal_swiftlint",
    binary = ":swiftlint",
    forced_cpus = [
        "x86_64",
        "arm64",
    ],
    minimum_os_version = "12.0",
    platform_type = "macos",
    visibility = ["//visibility:public"],
)

genrule(
    name = "release",
    srcs = [":release_files"],
    outs = [
        "bazel.tar.gz",
        "bazel.tar.gz.sha256",
    ],
    cmd = """\
    set -euo pipefail

    outs=($(OUTS))

    COPYFILE_DISABLE=1 tar czvfh "$${outs[0]}" \
    --exclude ^bazel-out/ \
    --exclude ^external/ \
    *
    shasum -a 256 "$${outs[0]}" > "$${outs[1]}"
    """,
)