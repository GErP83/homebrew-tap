name: Build & Publish Swift Packages

on:
  push:
    tags:
      - 'v*'
      - '[0-9]*'

jobs:
  linux-binaries:
    runs-on: ubuntu-latest
    container:
      image: swift:6.0 
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install packaging tools
        run: |
          apt-get update
          apt-get install -y rpm dpkg-dev curl git clang libcurl4-openssl-dev libssl-dev libatomic1
          chmod +x scripts/*.sh

      - name: Build RPM
        run: ./scripts/build-rpm.sh $VERSION

      - name: Verify RPM
        run: |
          RPM="release/toucan-${VERSION}-1.x86_64.rpm"
          echo "ðŸ§ª Verifying $RPM"
          rpm -Kv "$RPM"
          rpm -qp "$RPM"
          echo "âœ… RPM passed verification"

      - name: Build DEB
        run: ./scripts/build-deb.sh $VERSION

      - name: Verify DEB
        run: |
          DEB="build-deb/toucan-${VERSION}.amd64.deb"
          echo "ðŸ§ª Verifying $DEB"
          dpkg-deb --info "$DEB"
          dpkg-deb --contents "$DEB"
          echo "âœ… DEB passed verification"

      - name: Collect and verify packages
        run: |
          [ -e release ] && [ ! -d release ] && rm release
          mkdir -p release
          cp ~/rpmbuild/RPMS/**/*.rpm release/ || echo "No RPMs found"
          cp build-deb/*.deb release/ || echo "No DEBs found"
          echo "ðŸ“¦ Contents of release dir:"
          ls -lh release

      - name: Upload assets to release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: release/*.rpm;release/*.deb
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}

  macos-binaries:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install Swift 6.0
        run: |
          curl -L https://download.swift.org/swift-6.0-release/xcode/swift-6.0-RELEASE/swift-6.0-RELEASE-osx.pkg -o swift.pkg
          sudo installer -pkg swift.pkg -target /
          echo "/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin" >> $GITHUB_PATH
          swift --version
    
      - name: Build binary with Swift 6.0
        run: |
          export PATH="/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin:$PATH"
          swift build -c release
          
      - name: Create .pkg installer
        run: |
          chmod +x scripts/build-pkg.sh
          ./scripts/build-pkg.sh $VERSION

      - name: Verify .pkg
        run: |
          PKG="release/toucan-${VERSION}.pkg"
          echo "ðŸ§ª Verifying $PKG"
          pkgutil --payload-files "$PKG"
          echo "âœ… PKG passed verification"

      - name: Upload .pkg to release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: release/*.pkg
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}